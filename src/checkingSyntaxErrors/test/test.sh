#!/bin/sh

########################## BASIC ####################################

echo ===================== BASIC =========================================\n

echo "BASIC test with semicolon is started"
gcc main.c ../*.c ../../../libft/libft.a

echo "### should be OK ###"
	./a.out "1234567"
	./a.out "123;"
	./a.out "12;34;567;"
echo "### ~~~~~~~~~~~~ ###\n"
echo "### should be |syntax error near unexpected token \`;'| ###"
	./a.out ";1234567"
	./a.out "123;;4567"
	./a.out "1234567;;"
	./a.out "      ;1234567"
	./a.out "12     ;      ;34567"
	./a.out "1234567;    ;"
echo "### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ###"

echo "BASIC test with semicolon is finished\n"

echo "BASIC test with pipe is started"

echo "### should be OK ###"
	./a.out "1234567"
	./a.out "123|"
	./a.out "12|34|567"
	./a.out "123||4567"
echo "### ~~~~~~~~~~~~ ###\n"
echo "### should be |syntax error near unexpected token \`|'| ###"
	./a.out "|1234567"
	./a.out "      |1234567"
	./a.out "12     |      |34567"
	./a.out "1234567|    |"
echo "### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ###"

echo "BASIC test with pipe is finished\n"

echo "BASIC test with redirect > is started"

echo "### should be OK ###"
	./a.out "1234567"
	./a.out "12>3"
	./a.out "12>34>567"
	./a.out "1>23>456>7"
echo "### ~~~~~~~~~~~~ ###\n"
echo "### should be |syntax error near unexpected token \`>'| ###"
	./a.out "1234567> >"
	./a.out "1234567 >    >    "
	./a.out "12     >      >34567"
	./a.out "1234567>    >"
	./a.out ">      >1234567"
echo "### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ###\n"
echo "### should be syntax error near unexpected token \`newline' ###"
	./a.out "1234567>"
	./a.out "1234567 >"
	./a.out "1234567       >"
	./a.out "1234567       >    "
	./a.out ">"
echo "### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ###"

echo "BASIC test with redirect > is finished\n"

echo "BASIC test with redirect >> is started"

echo "### should be OK ###"
	./a.out "1234567"
	./a.out "12>>3"
	./a.out "12>>34>>567"
	./a.out "1>>23>>456>>7"
echo "### ~~~~~~~~~~~~ ###\n"
echo "### should be |syntax error near unexpected token \`>>'| ###"
	./a.out "1234567>> >>"
	./a.out "1234567 >>    >>    "
	./a.out "12     >>      >>34567"
	./a.out "1234567>>    >>"
	./a.out ">>      >>1234567"
echo "### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ###\n"
echo "### should be syntax error near unexpected token \`newline' ###"
	./a.out "1234567>>"
	./a.out "1234567 >>"
	./a.out "1234567       >>"
	./a.out "1234567       >>    "
	./a.out ">>"
echo "### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ###"

echo "BASIC test with redirect >> is finished\n"

echo "BASIC test with redirect < is started"

echo "### should be OK ###"
	./a.out "<1234567"
	./a.out "12<  3"
	./a.out "12<  34<567"
	./a.out "  <   1<23<456<7"
echo "### ~~~~~~~~~~~~ ###\n"
echo "### should be |syntax error near unexpected token \`<'| ###"
	./a.out "1234567< <"
	./a.out "1234567 <    <    "
	./a.out "12     <      <34567"
	./a.out "1234567<    <"
	./a.out "<      <1234567"
echo "### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ###\n"
echo "### should be syntax error near unexpected token \`newline' ###"
	./a.out "1234567<"
	./a.out "1234567 <"
	./a.out "1234567       <"
	./a.out "1234567       <    "
	./a.out "<"
echo "### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ###"


echo "BASIC test with redirect < is finished\n"

echo ====================================================================="\n"

############################ HARD ###################################

echo ======================= HARD ========================================"\n"

echo "HARD test with semicolon is started"
gcc main.c ../*.c ../../../libft/libft.a

echo "### should be OK ###"
	./a.out "12;';;;'34567"
	./a.out "123;\;\;';'\";;\"\;"
	./a.out "12;34;';;'567;"
	./a.out "\;';'\";;\"\;12;34;';;'567;"
	./a.out "\;';'\";;\"\;  ;1234567"
echo "### ~~~~~~~~~~~~ ###\n"
echo "### should be |syntax error near unexpected token \`;'| ###"
	./a.out "123';;'\;;    ;4567"
	./a.out "1234567\\\;;"
	./a.out "      ;\\\;1234567"
	./a.out "12     ; '    '; ;34567"
	./a.out "1234567'  ';    ;\;"
echo "### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ###"

echo "HARD test with semicolon is finished\n"

echo "HARD test with pipe is started"

echo "### should be OK ###"
	./a.out "\|\|'|||'1234567"
	./a.out "123|\|"
	./a.out "12|'34|'56||7"
	./a.out "123\"|\"|4567"
echo "### ~~~~~~~~~~~~ ###\n"
echo "### should be |syntax error near unexpected token \`|'| ###"
	./a.out "|\|'|||'1234567"
	./a.out "      |12\\\|34567"
	./a.out "12     | '    '| |34567"
	./a.out "12345\|67|    |"
echo "### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ###"

echo "HARD test with pipe is finished\n"

echo "HARD test with redirect > is started"

echo "### should be OK ###"
	./a.out "1234567 > \>"
	./a.out "12>'>'   \>3"
	./a.out "12>34>  \'   ' >>5'67"
	./a.out "1>23>456>7"
echo "### ~~~~~~~~~~~~ ###\n"
echo "### should be |syntax error near unexpected token \`>'| ###"
	./a.out "1234567> >"
	./a.out "1234567 >    >    "
	./a.out "12     >      >34567"
	./a.out "1234567>    >"
	./a.out ">      >1234567"
echo "### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ###\n"
echo "### should be syntax error near unexpected token \`newline' ###"
	./a.out "1234567>"
	./a.out "1234567 >"
	./a.out "1234567       >"
	./a.out "1234567       >    "
	./a.out ">"
echo "### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ###"

echo "BASIC test with redirect > is finished\n"

echo "BASIC test with redirect >> is started"

echo "### should be OK ###"
	./a.out "123\>\>4567"
	./a.out "1'2>>3'"
	./a.out "12>>   \>\>34>>'   >>'567"
	./a.out "1>>   \>\>23  >>  '>'\>456>>     \">\"\>7"
echo "### ~~~~~~~~~~~~ ###\n"
echo "### should be |syntax error near unexpected token \`>>'| ###"
	./a.out "1234567>> >>\>\>"
	./a.out "1234567\>'>' >>    >>    "
	./a.out "12     >>      >>34567"
	./a.out "'>>>>>'\>1234567>>    >>"
	./a.out "\'>>      >>1234567"
echo "### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ###\n"
echo "### should be syntax error near unexpected token \`newline' ###"
	./a.out "1234567>>"
	./a.out "1234567 >>"
	./a.out "1234567       >>"
	./a.out "1234567       >>    "
	./a.out ">>"
echo "### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ###"

echo "BASIC test with redirect >> is finished\n"

echo "BASIC test with redirect < is started"

echo "### should be OK ###"
	./a.out "<\<1234567"
	./a.out "12< '<' 3"
	./a.out "12<  3\''<'4<567"
	./a.out "  <  \<\<''\< 1<''23<456<7"
echo "### ~~~~~~~~~~~~ ###\n"
echo "### should be |syntax error near unexpected token \`<'| ###"
	./a.out "1234567< <"
	./a.out "1234567 <    <    "
	./a.out "12     <      <34567"
	./a.out "1234567<    <"
	./a.out "<      <1234567"
echo "### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ###\n"
echo "### should be syntax error near unexpected token \`newline' ###"
	./a.out "1234567<"
	./a.out "1234567 <"
	./a.out "1234567       <"
	./a.out "1234567       <    "
	./a.out "<"
echo "### ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ###"


echo "HARD test with redirect < is finished\n"

echo =====================================================================

#####################################################################
